executors:
  node:
    parameters:
      image:
        type: string
        default: 'lts'
    docker:
      - image: circleci/node:<< parameters.image >>
        environment:
          TERM: xterm

aliases:
  e2e_test: &e2e_test
    docker:
      - image: cypress/browsers:chrome69
        environment:
          TERM: xterm

  restore_cache: &restore_cache
    restore_cache:
      name: Restore Npm Package Cache
      keys:
        - v{{ .Environment.versionCache }}-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ checksum ".circleci/config.yml" }}

  install_node_modules: &install_node_modules
    run:
      name: Install dependencies
      command: yarn install --frozen-lockfile --ignore-engines

  save_cache: &save_cache
    save_cache:
      name: Save NPM package cache
      key: v{{ .Environment.versionCache }}-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ checksum ".circleci/config.yml" }}
      paths:
        - /home/circleci/.cache

  store_results: &store_results
    store_test_results:
      path: results

  store_results_artifacts: &store_results_artifacts
    store_artifacts:
      path: results

version: 2.1

jobs:
  test:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - <<: *save_cache
      - run:
          name: Test
          command: yarn test

  e2e_cypress:
    <<: *e2e_test
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - <<: *save_cache
      - run:
          name: Run E2E tests
          command: yarn test:e2e
      - <<: *store_results
      - <<: *store_results_artifacts
      - store_artifacts:
          path: cypress/videos
      - store_artifacts:
          path: cypress/screenshots

  build:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - run:
          name: Build
          command: yarn build
      - persist_to_workspace:
          root: ./
          paths:
            - public

  deploy:
    executor: node
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - <<: *restore_cache
      - <<: *install_node_modules
      - run:
          name: Install netlify-cli
          command: sudo npm install -g --silent netlify-cli
      - run:
          name: Deploy to Netlify
          command: netlify deploy --dir=./public -p

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test
      - e2e_cypress
      - build:
          requires:
            - test
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
